name: cd-production

on:
  push:
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  deploy:
    name: Deploy To Production
    runs-on: ubuntu-latest
    env:
      DEPLOY_STAGE: prod
      AWS_PROFILE: lgtm-cat
      TRIGGER_BUCKET_NAME: ${{ secrets.PROD_TRIGGER_BUCKET_NAME }}
      DESTINATION_BUCKET_NAME: ${{ secrets.PROD_DESTINATION_BUCKET_NAME }}
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.LGTM_CAT_SERVERLESS_DEPLOY_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.LGTM_CAT_SERVERLESS_DEPLOY_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Add profile credentials to ~/.aws/credentials
        env:
          PROD_AWS_ACCESS_KEY_ID: ${{ secrets.LGTM_CAT_SERVERLESS_DEPLOY_AWS_ACCESS_KEY_ID }}
          PROD_AWS_SECRET_ACCESS_KEY: ${{ secrets.LGTM_CAT_SERVERLESS_DEPLOY_AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $PROD_AWS_ACCESS_KEY_ID --profile $AWS_PROFILE
          aws configure set aws_secret_access_key $PROD_AWS_SECRET_ACCESS_KEY --profile $AWS_PROFILE
      - name: Docker set up
        run: |
          docker-compose up --build -d
      - name: Deploy To AWS(prod)
        run: |
          docker-compose exec -T node npm ci
          docker-compose exec -T node npm run deploy
